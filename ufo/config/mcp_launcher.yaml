# MCP Server Launcher Configuration
# This file contains the configuration for launching MCP servers for UFO2

# Server startup configuration
startup_config:  # Startup order - servers will be started in this order
  startup_order:
    - "core"       # Start core server first (basic UFO operations)
    - "shell"      # Start shell server (basic operations)
    - "web"        # Web server (browser automation)
    - "excel"      # Excel server (spreadsheets)
    - "word"       # Word server (documents)
    - "powerpoint" # PowerPoint server (presentations)
  
  # Startup delays between servers (in seconds)
  startup_delay: 2
  
  # Maximum startup timeout per server (in seconds)
  startup_timeout: 30
  
  # Health check settings
  health_check_retries: 5
  health_check_interval: 2

# Individual server configurations
servers:
  core:
    name: "Core UFO MCP Server"
    port: 8000
    module_path: "ufo.mcp.core_mcp_server"
    main_function: "main"
    args:
      - "--port"
      - "8000"
      - "--host"
      - "localhost"
    environment:
      PYTHONPATH: "."
      MCP_SERVER_NAME: "core"
    working_directory: "."
    log_file: "logs/mcp_core.log"
  powerpoint:
    name: "PowerPoint MCP Server"
    port: 8001
    module_path: "ufo.mcp.app_servers.powerpoint_mcp_server"
    main_function: "main"
    args:
      - "--port"
      - "8001"
      - "--host"
      - "localhost"
    environment:
      PYTHONPATH: "."
      MCP_SERVER_NAME: "powerpoint"
    working_directory: "."
    log_file: "logs/mcp_powerpoint.log"
  word:
    name: "Word MCP Server"
    port: 8002
    module_path: "ufo.mcp.app_servers.word_mcp_server"
    main_function: "main"
    args:
      - "--port"
      - "8002"
      - "--host"
      - "localhost"
    environment:
      PYTHONPATH: "."
      MCP_SERVER_NAME: "word"
    working_directory: "."
    log_file: "logs/mcp_word.log"
  excel:
    name: "Excel MCP Server"
    port: 8003
    module_path: "ufo.mcp.app_servers.excel_mcp_server"
    main_function: "main"
    args:
      - "--port"
      - "8003"
      - "--host"
      - "localhost"
    environment:
      PYTHONPATH: "."
      MCP_SERVER_NAME: "excel"
    working_directory: "."
    log_file: "logs/mcp_excel.log"

  web:
    name: "Web MCP Server"
    port: 8004
    module_path: "ufo.mcp.app_servers.web_mcp_server"
    main_function: "main"
    args:
      - "--port"
      - "8004"
      - "--host"
      - "localhost"
    environment:
      PYTHONPATH: "."
      MCP_SERVER_NAME: "web"
    working_directory: "."
    log_file: "logs/mcp_web.log"

  shell:
    name: "Shell MCP Server"
    port: 8005
    module_path: "ufo.mcp.app_servers.shell_mcp_server"
    main_function: "main"
    args:
      - "--port"
      - "8005"
      - "--host"
      - "localhost"
    environment:
      PYTHONPATH: "."
      MCP_SERVER_NAME: "shell"
    working_directory: "."
    log_file: "logs/mcp_shell.log"

# Logging configuration
logging:
  enabled: true
  log_level: "INFO"
  log_directory: "logs"
  max_log_size: "10MB"
  backup_count: 5
  console_output: true

# Monitoring and management
monitoring:
  # Process monitoring
  monitor_processes: true
  restart_on_failure: true
  max_restart_attempts: 3
  restart_delay: 5
  
  # Resource monitoring
  monitor_memory: true
  memory_threshold: 500  # MB
  monitor_cpu: true
  cpu_threshold: 80  # percentage
  
  # Health checks
  health_check_enabled: true
  health_check_interval: 30  # seconds
  health_check_timeout: 5   # seconds

# Development settings
development:
  # Debug mode
  debug_mode: false
  verbose_logging: false
  
  # Auto-restart on code changes
  auto_reload: false
  watch_directories:
    - "ufo/mcp"
    - "ufo/config"
  
  # Mock mode for testing
  mock_mode: false
  mock_responses: "tests/mcp/mock_responses.yaml"

# Security settings
security:
  # Allowed hosts
  allowed_hosts:
    - "localhost"
    - "127.0.0.1"
  
  # API keys (if needed)
  require_authentication: false
  api_keys: []
  
  # CORS settings
  cors_enabled: false
  cors_origins: ["http://localhost:*"]

# Shutdown configuration
shutdown:
  # Graceful shutdown timeout
  graceful_timeout: 30
  
  # Force kill timeout
  force_timeout: 10
  
  # Cleanup operations
  cleanup_logs: false
  cleanup_temp_files: true
